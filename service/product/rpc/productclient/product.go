// Code generated by goctl. DO NOT EDIT!
// Source: product.proto

//go:generate mockgen -destination ./product_mock.go -package productclient -source $GOFILE

package productclient

import (
	"context"

	"mall/service/product/rpc/product"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	CreateRequest  = product.CreateRequest
	CreateResponse = product.CreateResponse
	UpdateRequest  = product.UpdateRequest
	UpdateResponse = product.UpdateResponse
	RemoveRequest  = product.RemoveRequest
	RemoveResponse = product.RemoveResponse
	DetailRequest  = product.DetailRequest
	DetailResponse = product.DetailResponse

	Product interface {
		Create(ctx context.Context, in *CreateRequest) (*CreateResponse, error)
		Update(ctx context.Context, in *UpdateRequest) (*UpdateResponse, error)
		Remove(ctx context.Context, in *RemoveRequest) (*RemoveResponse, error)
		Detail(ctx context.Context, in *DetailRequest) (*DetailResponse, error)
	}

	defaultProduct struct {
		cli zrpc.Client
	}
)

func NewProduct(cli zrpc.Client) Product {
	return &defaultProduct{
		cli: cli,
	}
}

func (m *defaultProduct) Create(ctx context.Context, in *CreateRequest) (*CreateResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.Create(ctx, in)
}

func (m *defaultProduct) Update(ctx context.Context, in *UpdateRequest) (*UpdateResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.Update(ctx, in)
}

func (m *defaultProduct) Remove(ctx context.Context, in *RemoveRequest) (*RemoveResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.Remove(ctx, in)
}

func (m *defaultProduct) Detail(ctx context.Context, in *DetailRequest) (*DetailResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.Detail(ctx, in)
}
